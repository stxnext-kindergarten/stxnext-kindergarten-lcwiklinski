[buildout]
develop = .
parts =
    app
    mkdirs
    deploy_ini
    deploy_cfg
    debug_ini
    debug_cfg
    test
    pep8
    pylint

newest = false
versions = versions


[versions]


[server]
host = 0.0.0.0
logfiles = ${buildout:directory}/var/log


[app]
recipe = zc.recipe.egg
eggs = 
    presence_analyzer
    Paste
    PasteScript
    PasteDeploy

interpreter = python-console


[mkdirs]
recipe = z3c.recipe.mkdir
paths =
    ${server:logfiles}


[deploy_ini]
recipe = collective.recipe.template
input = etc/deploy.ini.in
output = ${buildout:parts-directory}/etc/${:outfile}
outfile = deploy.ini
app = presence_analyzer
workers = 50
spawn_if_under = 5
max_requests = 200
port = 8080


[debug_ini]
<= deploy_ini
outfile = debug.ini
app = presence_analyzer#debug
workers = 1
spawn_if_under = 1
max_requests = 0
port = 5000


[deploy_cfg]
recipe = collective.recipe.template
input = inline:
    # Deployment configuration
    DEBUG = False
    DATA_CSV = "${buildout:directory}/runtime/data/sample_data.csv"

output = ${buildout:parts-directory}/etc/deploy.cfg


[debug_cfg]
recipe = collective.recipe.template
input = inline:
    # Debugging configuration
    DEBUG = True
    DATA_CSV = "${buildout:directory}/runtime/data/sample_data.csv"

output = ${buildout:parts-directory}/etc/debug.cfg


[test]
recipe = pbp.recipe.noserunner
eggs = presence_analyzer
defaults = -v


[pep8]
recipe = zc.recipe.egg
eggs = pep8
entry-points = pep8check=pep8:_main
dirs = ['${buildout:directory}/src/presence_analyzer']
scripts = pep8
initialization = sys.argv.extend(${pep8:dirs})


[pylint]
recipe = zc.recipe.egg
eggs =
    pylint
    presence_analyzer
scripts = pylint
entry-points = pylint=pylint.lint:Run
dirs = ['${buildout:directory}/src/presence_analyzer']
initialization = sys.argv.extend(${pylint:dirs})
